// Generated by CoffeeScript 1.3.3

LOL.controller('MainCtrl', function($scope, localService) {
  $scope.visibleModal = false;
  $scope.visibleInnerItems = false;
  $scope.visibleInnerSpells = false;
  $scope.Masteries = Masteries;
  $scope.AllItems = Items;
  $scope.AllSpells = Spells;
  $scope.resetBuilds = function() {
    return localService.reset();
  };
  $scope.initTooltips = function() {
    Tooltips.items();
    Tooltips.runes();
    Tooltips.spells();
    Tooltips.masteries();
    $("table p").each(function() {
      var value;
      value = /0/;
      if (!$(this).text().search(value)) {
        $(this).addClass('disabled');
      }
      return null;
    });
    return null;
  };
  $scope.showItemsBlock = function($event) {
    $scope.selectedItem = $event.target;
    $scope.visibleInnerItems = !$scope.visibleInnerItems;
    Tooltips.items();
    return null;
  };
  $scope.showSpellsBlock = function($event) {
    $scope.selectedSpell = $event.target;
    $scope.visibleInnerSpells = !$scope.visibleInnerSpells;
    Tooltips.spells();
    return null;
  };
  $scope.hideItemsBlock = function() {
    $scope.visibleInnerItems = !$scope.visibleInnerItems;
    return null;
  };
  $scope.hideSpellsBlock = function() {
    $scope.visibleInnerSpells = !$scope.visibleInnerSpells;
    return null;
  };
  $scope.addItemInBuild = function(item, $event) {
    var target;
    target = $event.target;
    $('.inner-items > img').css('opacity', '1');
    $(target).css('opacity', '0.3');
    $($scope.selectedItem).attr('src', item);
    item = $('.image img').attr('id') + 'Item' + $($scope.selectedItem).index();
    try {
      localService.set(item, $(target).attr('ng-src'));
      $scope.hideItemsBlock();
    } catch (e) {
      alert("Сохранить в локальное хранилище не удалось: " + e);
    }
    return null;
  };
  $scope.addSpellInBuild = function(spell, $event) {
    var target;
    target = $event.target;
    $($scope.selectedSpell).attr('src', spell);
    spell = $('.image img').attr('id') + 'Spell' + $($scope.selectedSpell).index();
    try {
      localService.set(spell, $(target).attr('ng-src'));
      $scope.hideSpellsBlock();
    } catch (e) {
      alert("Сохранить в локальное хранилище не удалось: " + e);
    }
    return null;
  };
  $scope.offensiveUp = function(offensive) {
    var out;
    out = _.reduce(offensive, function(i, k) {
      return i + k;
    });
    return out;
  };
  $scope.defensiveUp = function(defensive) {
    var out;
    out = _.reduce(defensive, function(i, k) {
      return i + k;
    });
    return out;
  };
  $scope.utilityUp = function(utility) {
    var out;
    out = _.reduce(utility, function(i, k) {
      return i + k;
    });
    return out;
  };
  return null;
});

LOL.controller('AhriCtrl', function($scope) {
  $scope.stats = Characters.ahri.stats;
  $scope.image = Images.ahri;
  $scope.items = Characters.ahri.items;
  $scope.spells = Characters.ahri.spells;
  $scope.skills = Characters.ahri.skills;
  $scope.offensive = Characters.ahri.offensive;
  $scope.defensive = Characters.ahri.defensive;
  $scope.utility = Characters.ahri.utility;
  $scope.runes = Characters.ahri.runes;
  $scope.initCharacterTooltip = function() {
    return Tooltips.Ahri();
  };
  return null;
});
