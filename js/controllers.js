// Generated by CoffeeScript 1.6.1
(function() {
  var LOL;

  LOL = angular.module('lol', []).config('$routeProvider', function($routeProvider) {
    return $routeProvider.when('/', {
      controller: 'AhriCtrl'
    });
  });

  LOL.AhriCtrl = function($scope) {
    var arg, i, locOff, locSkill, locSpell, m, numberSkill, _i, _j, _k, _l, _m, _n, _o, _p, _ref, _ref1, _ref2;
    $scope.stats = Characters.ahri;
    $scope.image = Images.ahri;
    $scope.items = [Items.sorcerersShoes, Items.rylaisCrystalScepter, Items.willOfTheAncients, Items.rabadonsDeathcap, Items.morellosEvilTome, Items.voidStaff];
    $scope.initMain = function() {
      var i, locItem, numberItem, _i, _results;
      numberItem = 1;
      _results = [];
      for (i = _i = 2; _i < 8; i = ++_i) {
        locItem = $($scope.image).attr('id') + 'Item' + numberItem;
        if (Helpers.lGet(locItem) != null) {
          $scope.items[i] = Helpers.lGet(locItem);
        }
        _results.push(numberItem++);
      }
      return _results;
    };
    $scope.spells = [Spells.ignite, Spells.flash];
    $scope.initSpells = function() {
      var numberSpell;
      return numberSpell = 1;
    };
    for (i = _i = 0; _i < 2; i = ++_i) {
      locSpell = $($scope.image).attr('id') + 'Spell' + numberSpell;
      if (Helpers.lGet(locSpell) != null) {
        $scope.spells[i] = Helpers.lGet(locSpell);
      }
      numberSpell++;
    }
    $scope.skills = [Skills.orbOfDeception, Skills.charm, Skills.foxFire, Skills.orbOfDeception, Skills.orbOfDeception, Skills.spiritRush, Skills.orbOfDeception, Skills.foxFire, Skills.orbOfDeception, Skills.foxFire, Skills.spiritRush, Skills.foxFire, Skills.foxFire, Skills.charm, Skills.charm, Skills.spiritRush, Skills.charm, Skills.charm];
    $scope.initSkills = function() {};
    numberSkill = 1;
    for (i = _j = 2; _j < 20; i = ++_j) {
      locSkill = $($scope.image).attr('id') + 'Skill' + numberSkill;
      if (Helpers.lGet(locSkill) != null) {
        $scope.skills[i] = Helpers.lGet(locSkill);
      }
      numberSkill++;
    }
    $scope.offensive = [1, 0, 3, 0, 0, 4, 0, 0, 0, 1, 3, 0, 0, 4, 0, 4, 1];
    $scope.initOffensive = function() {
      var numberMaster;
      numberMaster = 1;
      return $scope.offensiveUp = 0;
    };
    for (m = _k = 0; _k < 17; m = ++_k) {
      locOff = $($scope.image).attr('id' + numberMaster);
      if (Helpers.lGet(locOff) != null) {
        $scope.offensive[m] = Helpers.lGet(locOff);
      }
      numberMaster++;
    }
    for (i = _l = 0, _ref = $scope.offensive.length; 0 <= _ref ? _l < _ref : _l > _ref; i = 0 <= _ref ? ++_l : --_l) {
      arg = parseInt($scope.offensive[i]);
      $scope.offensiveUp += arg;
    }
    $scope.defensive = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
    $scope.initDefensive = function() {
      var numberMaster;
      numberMaster = 18;
      return $scope.defensiveUp = 0;
    };
    for (m = _m = 0; _m < 16; m = ++_m) {
      locOff = $($scope.image).attr('id') + numberMaster;
      if (Helpers.lGet(locOff) != null) {
        $scope.defensive[m] = Helpers.lGet(locOff);
      }
      numberMaster++;
    }
    for (i = _n = 0, _ref1 = $scope.defensive.length; 0 <= _ref1 ? _n < _ref1 : _n > _ref1; i = 0 <= _ref1 ? ++_n : --_n) {
      arg = parseInt($scope.defensive[i]);
      $scope.defensiveUp += arg;
    }
    $scope.utility([1, 0, 3, 0, 1, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]);
    $scope.initUtility = function() {
      var numberMaster;
      numberMaster = 34;
      return $scope.utilityUp = 0;
    };
    for (m = _o = 0; _o < 16; m = ++_o) {
      locOff = $($scope.image).attr('id') + numberMaster;
      if (Helpers.lGet(locOff) != null) {
        $scope.utility[m] = Helpers.lGet(locOff);
      }
      numberMaster++;
    }
    for (i = _p = 0, _ref2 = $scope.utility.length; 0 <= _ref2 ? _p < _ref2 : _p > _ref2; i = 0 <= _ref2 ? ++_p : --_p) {
      arg = parseInt($scope.utility[i]);
      $scope.utilityUp += arg;
    }
    $scope.runes = [Runes.greaterMarkOfInsight, Runes.greaterSealOfClarity, Runes.greaterGlyphOfForce];
    $scope.initRunes = function() {
      var locRune, numberRune, _q, _results;
      numberRune = 1;
      _results = [];
      for (i = _q = 0; _q < 4; i = ++_q) {
        locRune = $($scope.image).attr('id') + 'Rune' + numberRune;
        if (Helpers.lGet(locRune) != null) {
          $scope.runes[i] = Helpers.lGet(locRune);
        }
        _results.push(numberRune++);
      }
      return _results;
    };
    $scope.initTooltip = function() {
      initTooltipItems();
      initTooltipRunes();
      initTooltipSpells();
      return initTooltipMasteries();
    };
    $("table p").each(function() {
      var value;
      value = /0/;
      if (!$(this).text().search(value)) {
        return $(this).addClass('disabled');
      }
    });
    return $scope.initTooltipAhri = function() {
      return initTooltipAhri();
    };
  };

  $(function() {
    var block;
    block = $('#block');
    initActions(function() {
      initTooltip();
      initItemsAction();
      initSpellsAction();
      initSkillsAction();
      initRunesAction();
      initMasterAction();
      return initMasteries();
    });
    $('#myModal').modal('hide');
    $("#tabs").tabs();
    $('#tabs .menu a').bind('click', function() {
      $('.character').effect('slide', 800);
      return initActions();
    });
    initAhri();
    return initActions();
  });

}).call(this);
